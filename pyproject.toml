[project]
name = "ai-diplomacy"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "asyncio>=3.4.3",
    "bcrypt>=4.3.0",
    "coloredlogs>=15.0.1",
    "diplomacy>=1.1.2",
    "dotenv>=0.9.9",
    "execnet>=2.1.1",
    "google-genai>=1.16.1",
    "json-repair>=0.46.0",
    "json5>=0.12.0",
    "llm>=0.25",
    "llm-gemini>=0.20",
    "llm-gguf>=0.2",
    "llm-grok>=1.0",
    "llm-mistral>=0.13",
    "llm-ollama>=0.10.0",
    "ollama>=0.4.8",
    "pandas>=2.2.3",
    "pylint>=3.3.7",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "python-dateutil>=2.9.0.post0",
    "pytz>=2025.2",
    "sphinx>=8.2.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-rtd-theme>=3.0.2",
    "svgelements>=1.9.6",
    "toml>=0.10.2",
    "tornado>=6.5.1",
    "tqdm>=4.67.1",
    "ujson>=5.10.0",
    "jinja2>=3.0.0",
    "mcp[cli]>=1.9.1",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "pytest-cov>=6.1.1",
    "lark>=1.2.2",
    "python-dotenv>=1.1.0",
    "networkx>=3.5",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.11.11",
    "ty>=0.0.1a6",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
]

[tool.setuptools.packages.find]
include = ["ai_diplomacy*"]
namespaces = false

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
# markers array removed, moved to pytest.ini
addopts = "-m \"not integration\" --strict-markers -q -ra --cov=ai_diplomacy --cov-report=term-missing:skip-covered --cov-report=html"
testpaths = ["tests"]

[tool.ruff]
line-length = 110
extend-ignore = ["E501"]   # E501 = line too long (pycodestyle)

[tool.coverage.run]
branch = true
omit   = ["*/__init__.py", "*/migrations/*", "*/tests/*"]

[tool.coverage.report]
fail_under = 40          # start at 80â€¯%, ratchet upward later
show_missing = true

